import java.util.*;

public class Solution {

    public boolean containsDuplicate(int[] nums) {
        Set<Integer> s = new TreeSet<>();
        for (int i : nums)
            if (!s.add(i))
                return true;
        return false;
    }

    public static void main(String[] args) {
        Solution s = new Solution();
        System.out.println(s.containsDuplicate(new int[]{36, 131, 94, 22, 111, 35, 232, 348, 192, 360, 120, 121, 224, 252, 2, 151, 153, 561, 513, 5, 31, 283, 168, 281, 168, 356, 339, 518, 395, 563, 348, 585, 141, 537, 92, 490, 28, 378, 314, 126, 257, 171, 488, 469, 34, 395, 162, 34, 320, 115, 509, 504, 474, 458, 473, 96, 386, 208, 524, 171, 479, 360, 539, 506, 259, 161, 508, 280, 412, 491, 519, 234, 554, 50, 101, 126, 597, 353, 557, 88, 573, 165, 223, 82, 293, 510, 528, 114, 454, 170, 262, 439, 166, 579, 449, 355, 195, 465, 417, 457, 14, 328, 162, 179, 381, 568, 251, 14, 20, 521, 201, 151, 252, 112, 494, 567, 460, 293, 105, 89, 276, 498, 93, 100, 103, 433, 63, 540, 120, 37, 161, 493, 135, 322, 170, 415, 444, 598, 566, 509, 136, 236, 264, 478, 24, 122, 534, 115, 542, 156, 245, 505, 538, 213, 283, 15, 466, 298, 58, 137, 294, 385, 232, 187, 506, 386, 468, 161, 509, 288, 276, 330, 373, 59, 502, 449, 274, 99, 184, 300, 595, 322, 432, 149, 79, 125, 580, 102, 294, 94, 211, 456, 242, 66, 10, 170, 595, 298, 362, 14, 232, 558, 82, 525, 581, 319, 581, 224, 278, 84, 582, 185, 296, 240, 6, 150, 395, 247, 215, 437, 13, 278, 581, 52, 291, 73, 417, 264, 194, 326, 151, 296, 4, 229, 319, 334, 273, 446, 578, 26, 145, 4, 225, 544, 34, 507, 405, 101, 39, 149, 139, 155, 439, 557, 227, 147, 282, 11, 549, 453, 153, 80, 529, 293, 304, 227, 50, 531, 414, 156, 514, 354, 415, 528, 302, 414, 432, 238, 180, 430, 258, 261, 508, 310, 214, 188, 518, 595, 113, 2, 195, 257, 200, 193, 513, 125, 243, 15, 482, 160, 561, 516, 87, 509, 593, 140, 62, 201, 192, 584, 160, 533, 563, 294, 128, 408, 69, 79, 204, 278, 592, 444, 305, 445, 469, 333, 567, 12, 355, 292, 164, 427, 303, 502, 333, 221, 226, 565, 101, 170, 204, 456, 186, 426, 513, 589, 416, 410, 350, 121, 461, 100, 523, 486, 463, 458, 14, 381, 454, 76, 285, 128, 398, 194, 322, 205, 72, 498, 59, 406, 59, 352, 473, 200, 541, 99, 545, 509, 431, 197, 77, 66, 91, 526, 346, 77, 21, 170, 330, 34, 434, 343, 322, 85, 285, 318, 121, 468, 86, 225}));
        System.out.println(s.containsDuplicate(new int[]{10, 100, 101, 102, 103, 105, 11, 111, 112, 113, 114, 115, 12, 120, 121, 122, 125, 126, 128, 13, 131, 135, 136, 137, 139, 14, 140, 141, 145, 147, 149, 15, 150, 151, 153, 155, 156, 160, 161, 162, 164, 165, 166, 168, 170, 171, 179, 180, 184, 185, 186, 187, 188, 192, 193, 194, 195, 197, 2, 20, 200, 201, 204, 205, 208, 21, 211, 213, 214, 215, 22, 221, 223, 224, 225, 226, 227, 229, 232, 234, 236, 238, 24, 240, 242, 243, 245, 247, 251, 252, 257, 258, 259, 26, 261, 262, 264, 273, 274, 276, 278, 28, 280, 281, 282, 283, 285, 288, 291, 292, 293, 294, 296, 298, 300, 302, 303, 304, 305, 31, 310, 314, 318, 319, 320, 322, 326, 328, 330, 333, 334, 339, 34, 343, 346, 348, 35, 350, 352, 353, 354, 355, 356, 36, 360, 362, 37, 373, 378, 381, 385, 386, 39, 395, 398, 4, 405, 406, 408, 410, 412, 414, 415, 416, 417, 426, 427, 430, 431, 432, 433, 434, 437, 439, 444, 445, 446, 449, 453, 454, 456, 457, 458, 460, 461, 463, 465, 466, 468, 469, 473, 474, 478, 479, 482, 486, 488, 490, 491, 493, 494, 498, 5, 50, 502, 504, 505, 506, 507, 508, 509, 510, 513, 514, 516, 518, 519, 52, 521, 523, 524, 525, 526, 528, 529, 531, 533, 534, 537, 538, 539, 540, 541, 542, 544, 545, 549, 554, 557, 558, 561, 563, 565, 566, 567, 568, 573, 578, 579, 58, 580, 581, 582, 584, 585, 589, 59, 592, 593, 595, 597, 598, 6, 62, 63, 66, 69, 72, 73, 76, 77, 79, 80, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 99}));
    }

}
